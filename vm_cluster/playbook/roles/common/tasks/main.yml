---

- debug: var={{ key }}
  with_items: groups['all']
  tags: debug
  vars:
    - key: "ansible_{{ management_interface }}"

- name: Create the Hosts File
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' state=present
              line="{{ hostvars[item][key].ipv4.address }} {{ item }}"
  when: hostvars[item][key].ipv4 is defined and
        hostvars[item][key].ipv4.address is defined
  with_items: groups['all']
  become: yes
  vars:
    - key: "ansible_{{ management_interface }}"

- name: Ensure Chrony is Installed for NTP
  apt: name=chrony
  become: yes

- name: Ensure the the default NTP Servers are Removed
  replace: dest=/etc/chrony/chrony.conf
           regexp='^server .\.debian\.pool\.ntp\.org.*$' replace=""
  become: yes

# TODO - Make Controllers access WAN, make everything else access controllers
- name: Ensure the Correct NTP Server is Set
  lineinfile: dest=/etc/chrony/chrony.conf regexp='^server .*$' state=present
              line="server {{ ntp }} iburst"
  notify: restart chrony
  become: yes

- name: Ensure Apt Utilities are Installed
  apt: name=software-properties-common
  become: yes

- name: Ensure the Newton OpenStack Repository is Enabled
  shell: add-apt-repository cloud-archive:newton
  become: yes

- name: Ensure Package Cache is Current
  apt: update_cache=yes cache_valid_time=3600
  become: yes

- name: Ensure Latest Packages are Installed
  apt: upgrade=dist
  become: yes

- name: Ensure the OpenStack Client is Installed
  apt: name=python-openstackclient
  become: yes

- name: Check if Reboot is Necessary
  stat: path=/var/run/reboot-required
  register: reboot_required

- name: Reboot the System
  shell: reboot
  when: reboot_required.stat.exists
  become: yes

- name: Wait for System Reboot
  local_action:
    module: wait_for
      host={{ ansible_ssh_host }} port={{ ansible_port }}
      delay=1 timeout=300
    become: no
  when: reboot_required.stat.exists
