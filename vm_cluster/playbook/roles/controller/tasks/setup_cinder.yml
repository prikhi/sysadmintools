---

- name: Ensure Cinder Database Exists
  mysql_db: name={{ cinder_db_name }}
            login_user=root login_password="{{ vaulted_db_root_password }}"
  when: inventory_hostname in groups['master-controller']
  become: yes

- name: Ensure the Cinder Database User Exists
  mysql_user: name={{ cinder_db_user }} password={{ vaulted_db_password }}
              priv='{{ cinder_db_name }}.*:ALL' host="{{ item }}"
              login_user=root login_password="{{ vaulted_db_root_password }}"
  with_items:
    - localhost
    - '%'
  when: inventory_hostname in groups['master-controller']
  become: yes

- name: Retrieve a List of Existing Users
  shell: openstack user list -f value -c Name
  register: os_users
  changed_when: false

- name: Ensure the OpenStack Cinder User Exists
  shell: openstack user create --domain default
         --password "{{ vaulted_cinder_os_password|quote }}"
         "{{ cinder_os_user }}"
  when: (os_users.stdout.find(cinder_os_user) == -1) and
        (inventory_hostname in groups['master-controller'])

- name: Ensure the OpenStack Cinder User's Role is Properly Configured
  shell: openstack role add --project {{ service_os_project }}
         --user {{ cinder_os_user }} admin
  when: inventory_hostname in groups['master-controller']

- name: Retrieve a List of OpenStack Services
  shell: openstack service list -c "Type" -f value
  register: os_services
  changed_when: false

- name: Ensure the OpenStack Cinder Services Exist
  shell: openstack service create --name {{ item.name }}
         --description "Block Storage Service" {{ item.type }}
  with_items:
    - { name: cinder, type: volume }
    - { name: cinderv2, type: volumev2 }
  when: (os_services.stdout.find("volume") == -1) and
        (inventory_hostname in groups['master-controller'])

- name: Ensure the Volume Service API Endpoints Exist
  shell: openstack endpoint create --region RegionOne volume {{ item }}
         http://{{ master_controller_hostname }}:8776/v1/%\(tenant_id\)s
  with_items:
      - public
      - internal
      - admin
  when: (os_services.stdout.find("volume") == -1) and
        (inventory_hostname in groups['master-controller'])

- name: Ensure the Volume2 Service API Endpoints Exist
  shell: openstack endpoint create --region RegionOne volumev2 {{ item }}
         http://{{ master_controller_hostname }}:8776/v2/%\(tenant_id\)s
  with_items:
      - public
      - internal
      - admin
  when: (os_services.stdout.find("volume") == -1) and
        (inventory_hostname in groups['master-controller'])

- name: Ensure Cinder is Installed
  apt: name="{{ item }}"
  with_items:
    - cinder-api
    - cinder-scheduler
    - cinder-volume
  become: yes

- name: Ensure Cinder is Correctly Configured
  ini_file: dest=/etc/cinder/cinder.conf section="{{ item.section }}"
            option="{{ item.option }}" value="{{ item.value }}"
  become: yes
  with_items: "{{ common_auth_config + common_rabbit_config + common_cinder_config + cinder_config }}"
  notify:
    - sync cinder database
    - restart tgt service
    - restart cinder service

- name: Ensure Nova is Correctly Configured
  ini_file: dest=/etc/nova/nova.conf section="cinder"
            option="os_region_name" value="RegionOne"
  become: yes
  notify: restart nova api
