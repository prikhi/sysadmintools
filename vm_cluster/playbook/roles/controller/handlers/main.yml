---

- name: restart mysql
  service: name=mysql state=restarted
  become: yes

- name: restart mongodb
  service: name=mongodb state=restarted
  become: yes

- name: restart rabbitmq
  service: name=rabbitmq-server state=restarted
  become: yes

- name: restart memcached
  service: name=memcached state=restarted
  become: yes

- name: restart haproxy
  service: name=haproxy state=restarted
  become: yes

- name: reload sysctl
  shell: sysctl -p
  become: yes

- name: sync keystone database
  shell: keystone-manage db_sync
  become: yes
  become_user: keystone
  when: inventory_hostname in groups['master-controller']

- name: initialize key repositories
  shell: keystone-manage {{ item }} --keystone-user keystone --keystone-group keystone
  become: yes
  with_items:
      - fernet_setup
      - credential_setup
  when: inventory_hostname in groups['master-controller']

- name: restart apache
  service: name=apache2 state=restarted
  become: yes

- name: sync glance database
  shell: glance-manage db_sync
  become: yes
  become_user: glance
  when: inventory_hostname in groups['master-controller']

- name: restart glance
  service: name={{ item }} state=restarted
  with_items:
    - glance-registry
    - glance-api
  become: yes

- name: sync placement database
  shell: placement-manage db sync
  become: yes
  become_user: placement
  when: inventory_hostname in groups['master-controller']

- name: restart nova
  service: name={{ item }} state=restarted
  with_items:
    - nova-api
    - nova-consoleauth
    - nova-scheduler
    - nova-conductor
    - nova-novncproxy
  become: yes

- name: sync nova database
  shell: nova-manage {{ item }} sync
  become: yes
  become_user: nova
  when: inventory_hostname in groups['master-controller']
  with_items:
    - api_db
    - db

- name: sync neutron database
  shell: neutron-db-manage --config-file /etc/neutron/neutron.conf
         --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head
  become: yes
  become_user: neutron
  when: inventory_hostname in groups['master-controller']

- name: restart neutron
  service: name={{ item }} state=restarted
  with_items:
    - neutron-server
    - neutron-openvswitch-agent
    - neutron-metadata-agent
    - neutron-l3-agent
  become: yes

- name: restart nova api
  service: name=nova-api state=restarted
  become: yes

- name: sync cinder database
  shell: cinder-manage db sync
  become: yes
  become_user: cinder
  when: inventory_hostname in groups['master-controller']

- name: restart tgt service
  service: name=tgt state=restarted
  become: yes

- name: restart cinder service
  service: name={{ item }} state=restarted
  with_items:
    - cinder-scheduler
    - cinder-api
  become: yes
