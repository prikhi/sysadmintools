---

- name: Add a Public User
  user: name={{ public_username }} state=present shell=/bin/bash append=yes createhome=yes
        groups=cdrom,floppy,audio,dip,video,plugdev,netdev,scanner,lpadmin
        home=/home/{{ public_username }} password=$6$OZuDgBCMU$HXQe4DIBX6OcrKJEAtjcHTQM69etnsV2t8IJuLVzpC1mCjBydqvvpLlyqydyoxXfgIolWwxN6bXD2IqfTqBd4.
  become:  yes
  tags:
    - public_user
    - users

- name: Authorize Pavan's SSH keys
  authorized_key: user="{{ public_username }}" key="{{ item }}"
  with_file:
    - pavan/rsa.pub
    - pavan/ecdsa.pub
  become: yes
  become_user: "{{ public_username }}"
  tags:
    - pavan
    - users


# Desktop Configuration
- name:  Set the Public User's Default XSession to KDE
  shell: echo "[Desktop]\nSession=plasma" > ~/.dmrc creates=/home/{{ public_username }}/.dmrc
  become:  yes
  become_user: "{{ public_username }}"
  tags:
    - public_user
    - users

- name: Copy the Public User's Desktop Configuration Files
  synchronize: src=public_home/{{ item }} dest=/home/{{ public_username }}/
               checksum=True rsync_path=/usr/bin/rsync
  with_items:
    #- .config
    - .kde
    - .local
    - .mozilla
    - .face.icon
    - Desktop
  become: yes
  become_user: "{{ public_username }}"
  remote_user: "{{ public_username }}"
  tags:
    - public_user
    - users

- name: Fix the Public User's Configuration Directory Permissions
  file: path=/home/{{ public_username }}/{{ item }} owner={{ public_username }} group={{ public_username }} recurse=yes
  with_items:
    - .config
    - .kde
    - .local
    - .mozilla
    - Desktop
  become: yes
  tags:
    - public_user
    - users

- name: Fix the Public User's Configuration File Permissions
  file: path=/home/{{ public_username }}/{{ item }} owner={{ public_username }} group={{ public_username }}
  with_items:
    - .face.icon
  become: yes
  tags:
    - public_user
    - users

- name:  Mark Desktop Shortcuts as Executable
  shell: chmod u+x -v ~/Desktop/*.desktop
  become: yes
  become_user: "{{ public_username }}"
  tags:
    - public_user
    - users

- name: Ensure the Desktop is Correctly Configured
  copy: src=public_home/plasma-org.kde.plasma.desktop-appletsrc dest=/home/{{ public_username }}/.config
        force=no
  become: yes
  become_user: "{{ public_username }}"
  tags:
    - public_user
    - users


# Mumble
- name: Make the Mumble Configuration Directory
  shell: mkdir -p /home/{{ public_username }}/.config/Mumble || /bin/true
  become: yes
  become_user: "{{ public_username }}"
  tags:
    - mumble
    - public_user
    - users

- name:     Copy over the Mumble Configuration File
  template: src=Mumble.conf.j2 dest=/home/{{ public_username }}/.config/Mumble/Mumble.conf
  become: yes
  become_user: "{{ public_username }}"
  tags:
    - mumble
    - public_user
    - users

- name: Ensure the Mumble Data Directory Exists
  stat: path=/home/{{ public_username }}/.local/share/data/Mumble/Mumble
  register: mumble_data_dir
  become:  yes
  become_user: "{{ public_username }}"
  tags:
    - mumble
    - public_user
    - user

- name:  Check if Mumble has any Favorite Servers
  shell: echo 'select count(*) from servers;' | sqlite3 .mumble.sqlite
         chdir=/home/{{ public_username }}/.local/share/data/Mumble/Mumble/
  register: mumble_favorties_count
  when:  setup_mumble and mumble_data_dir.stat.isdir is defined and mumble_data_dir.stat.isdir
  become:  yes
  become_user: "{{ public_username }}"
  tags:
    - mumble
    - public_user
    - user

- name:  Add a Favorite Server to Mumble
  shell: echo 'insert into servers (id, name, hostname, port, username, password, url) values
         (372, "{{ mumble_server_name }}", "{{ mumble_server }}", {{ mumble_server_port }},
         "{{ ansible_hostname }}", "", "");' | sqlite3 .mumble.sqlite
         chdir=/home/{{ public_username }}/.local/share/data/Mumble/Mumble/
  register: temp_var
  when:  setup_mumble and mumble_data_dir.stat.isdir is defined and mumble_data_dir.stat.isdir and mumble_favorties_count.stdout == '0'
  become:  yes
  become_user: "{{ public_username }}"
  tags:
    - mumble
    - public_user
    - user

# Tor Browser Bundle
- name: Check if the Tor Browser Bundle is Installed
  stat: path=/home/{{ public_username }}/.torbundle/
  register: torbundle_folder
  become: yes
  become_user: "{{ public_username }}"
  tags:
    - public_user
    - users
    - tor

- name:  Check the Current Version of the Tor Browser Bundle
  shell: head -n 1 /home/{{ public_username }}/.torbundle/Browser/TorBrowser/Docs/ChangeLog.txt | cut -d ' ' -f 3
  register: current_tor_version
  when:  torbundle_folder.stat.exists == true
  become:  yes
  become_user: "{{ public_username }}"
  tags:
    - public_user
    - users
    - tor

- name:  Download and Extract the Tor Browser Bundle
  shell: wget http://www.torproject.org/dist/torbrowser/{{ tor_version }}/tor-browser-{{ tor_full_version }}.tar.xz;
         rm -rf /home/{{ public_username }}/.torbundle || /bin/true;
         mkdir -p /home/{{ public_username }}/.torbundle;
         tar -xvf tor-browser-{{ tor_full_version }}.tar.xz;
         mv tor-browser_*/* .torbundle/;
         rm tor-browser-{{ tor_full_version }}.tar.xz;
         rmdir tor-browser_*
         chdir=/home/{{ public_username }}
  when:  torbundle_folder.stat.exists == false or tor_version != current_tor_version.stdout
  become:  yes
  become_user: "{{ public_username }}"
  tags:
    - public_user
    - users
    - tor
