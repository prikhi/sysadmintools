# ACORN COMMUNITY DEBIAN WORKSTATION AUTOMATED INSTALL PRE-SEED FILE
#
# This file is used to pre-seed an automated installation of Debian Stretch for
# Acorn's Linux Workstations.
#
# It is based off of the Debian Pre-seed Documentation and Example File:
#       https://www.debian.org/releases/stable/amd64/apb.html.en
#       https://www.debian.org/releases/stable/example-preseed.txt


### Localization
# Locale sets language and country.
d-i debian-installer/locale string en_US

# Keyboard selection.
d-i console-keymaps-at/keymap select us
d-i keyboard-configuration/variant select English (US)
d-i keyboard-configuration/xkb-keymap select American English

### Network configuration
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string
d-i netcfg/get_domain string acorn

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

### Mirror settings
# If you select ftp, the mirror/country string does not need to be set.
d-i mirror/protocol string http
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Suite to install.
d-i mirror/suite string testing
# Suite to use for loading installer components (optional).
#d-i mirror/udeb/suite string testing

### Partitioning
# Use the first disk:
d-i partman-auto/disk string /dev/sda
# The presently available methods are: "regular", "lvm" and "crypto"
d-i partman-auto/method string lvm
d-i partman-auto-lvm/new_vg_name string sysvg

# This recipe creates a 200MB /boot partition, dedicating the rest of the disk
# to the following Logical Volumes:
#
#   9 - 30 GB       /
#   1 -  8 GB       /tmp
#   2 -  6 GB       /var
#   3 GB -  rest    /home
#
#   You will need around 15GB available for this to work, otherwise only root
#   and swap logical volumes will be made.
d-i partman-auto/expert_recipe string                                         \
    custom ::                                                                 \
            200 200 200 ext3                                                  \
                    $primary{ }                                               \
                    $bootable{ }                                              \
                    method{ format }                                          \
                    format{ }                                                 \
                    use_filesystem{ }                                         \
                    filesystem{ ext3 }                                        \
                    mountpoint{ /boot } .                                     \
                                                                              \
            100 1000 1000000000 lvm                                           \
                    $primary{ }                                               \
                    $defaultignore{ }                                         \
                    method{ lvm }                                             \
                    device{ /dev/sda }                                        \
                    vg_name{ sysvg } .                                        \
                                                                              \
            9000 15000 30000 ext4                                             \
                    $lvmok{ }                                                 \
                    in_vg{ sysvg }                                            \
                    lv_name{ root }                                           \
                    method{ format }                                          \
                    format{ }                                                 \
                    use_filesystem{ }                                         \
                    filesystem{ ext4 }                                        \
                    mountpoint{ / } .                                         \
                                                                              \
            1000 2000 8000 reiserfs                                           \
                    $lvmok{ }                                                 \
                    in_vg{ sysvg }                                            \
                    lv_name{ tmp }                                            \
                    method{ format }                                          \
                    format{ }                                                 \
                    use_filesystem{ }                                         \
                    filesystem{ ext4 }                                        \
                    mountpoint{ /tmp } .                                      \
                                                                              \
            2000 3000 10000 reiserfs                                          \
                    $lvmok{ }                                                 \
                    in_vg{ sysvg }                                            \
                    lv_name{ var }                                            \
                    method{ format }                                          \
                    format{ }                                                 \
                    use_filesystem{ }                                         \
                    filesystem{ ext4 }                                        \
                    mountpoint{ /var } .                                      \
                                                                              \
            3000 10000 1000000000 ext4                                        \
                    $lvmok{ }                                                 \
                    in_vg{ sysvg }                                            \
                    lv_name{ home }                                           \
                    method{ format }                                          \
                    format{ }                                                 \
                    use_filesystem{ }                                         \
                    filesystem{ ext4 }                                        \
                    mountpoint{ /home } .                                     \
                                                                              \
            100% 2000 150% linux-swap                                         \
                    $lvmok{ }                                                 \
                    in_vg{ sysvg }                                            \
                    lv_name{ swap }                                           \
                    method{ swap }                                            \
                    format{ } .

d-i partman-auto/choose_recipe select custom

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-lvm/purge_lvm_from_device boolean true

# This makes partman automatically partition without confirmation.
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Mount Partitions by UUID
d-i partman/mount_style select uuid

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Eastern

# Use NTP to Update the Clock
d-i clock-setup/ntp-server 0.us.pool.ntp.org

### Apt setup
# You can choose to install non-free and contrib software.
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true
# Uncomment this if you don't want to use a network mirror.
#d-i apt-setup/use_mirror boolean false
# Uncomment this to avoid adding security sources, or
# add a hostname to use a different server than security.debian.org.
#d-i apt-setup/security_host string

# By default the installer requires that repositories be authenticated
# using a known gpg key. This setting can be used to disable that
# authentication. Warning: Insecure, not recommended.
#d-i debian-installer/allow_unauthenticated string true

### Account setup
# Make both a root and admin user
# Skip making a root account
d-i passwd/root-login boolean false
#d-i passwd/root-password-crypted password $1$iyb4REKJ$zyfe/SwVDkUfzczIuZkg9/

# Create a normal user account instead.
d-i passwd/make-user boolean true
d-i passwd/user-fullname string SESE Admimistrator
d-i passwd/username string seseadmin
d-i passwd/user-password-crypted password $6$pPBRNYpPkeZwcvE$sDP6L.8OpU6YOQ7AxW57dT2lAboNr9IAcNbhGh/qpEVCJoz7gtn9NIpB3ip9hRnkpBikjP5cX4188Ni8CHLFp1

### Base system installation
# Select the initramfs generator used to generate the initrd for 2.6 kernels.
#d-i base-installer/kernel/linux/initramfs-generators string yaird

### Boot loader installation
# Grub is the default boot loader (for x86). If you want lilo installed
# instead, set this to true:
d-i grub-installer/skip boolean false

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# The device to install grub on
d-i grub-installer/bootdev string /dev/sda

### Package selection
# All we need is an SSH, everything else will be handled with Ansible
tasksel tasksel/first multiselect ssh-server

# Ansible requies Python and we'll manually install a couple of useful
# packages, just in case. Installing systemd-sysv now saves us a reboot.
d-i pkgsel/include string python systemd systemd-sysv build-essential vim git

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and include it on CDs.
popularity-contest popularity-contest/participate boolean false

### Finishing up the first stage install
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

### X configuration
# X can detect the right driver for some cards, but if you're preseeding,
# you override whatever it chooses. Still, vesa will work most places.
#xserver-xorg xserver-xorg/config/device/driver select vesa

# A caveat with mouse autodetection is that if it fails, X will retry it
# over and over. So if it's preseeded to be done, there is a possibility of
# an infinite loop if the mouse is not autodetected.
#xserver-xorg xserver-xorg/autodetect_mouse boolean true

# Monitor autodetection is recommended.
xserver-xorg xserver-xorg/autodetect_monitor boolean true
# Uncomment if you have an LCD display.
xserver-xorg xserver-xorg/config/monitor/lcd boolean true
# X has three configuration paths for the monitor. Here's how to preseed
# the "medium" path, which is always available. The "simple" path may not
# be available, and the "advanced" path asks too many questions.
xserver-xorg xserver-xorg/config/monitor/selection-method \
       select medium

### Preseeding other packages
# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file


#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh

